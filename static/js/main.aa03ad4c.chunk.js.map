{"version":3,"sources":["containers/Dashboard/Dashboard.module.scss","service.js","shared/SampleRowData.js","shared/ProficiencyCustomCell.js","shared/ColumnDefinitions.js","components/DataTable/DataTable.js","containers/Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js","components/DataTable/DataTable.module.scss"],"names":["module","exports","Warapper","axios","create","baseURL","SampleRowDataFactory","rowData","i","countryData","RefData","COUNTRIES","length","push","name","FIRST_NAMES","LAST_NAMES","skills","android","Math","random","html5","mac","windows","css","dob","DOB","address","ADDRESSES","years","round","proficiency","country","continent","language","mobile","this","createRandomPhoneNumber","landline","result","COUNTRY_CODES","Ireland","Spain","United Kingdom","France","Germany","Sweden","Italy","Greece","Iceland","Portugal","Malta","Norway","Brazil","Argentina","Colombia","Peru","Venezuela","Uruguay","Date","IT_SKILLS","IT_SKILLS_NAMES","ProficiencyCustomCell","backgroundColor","props","value","react_default","a","createElement","className","style","width","React","Component","ColumnDefinitionFactory","headerName","checkboxSelection","suppressSorting","suppressMenu","pinned","children","field","editable","cellRenderer","countryCellRenderer","cellEditorParams","values","filterParams","cellHeight","cellEditor","filter","valueFormatter","params","pad","getDate","getMonth","getFullYear","columnGroupShow","cellRendererFramework","India","num","totalStringSize","asString","DataTable","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","startInterval","interval","setInterval","refreshCells","stopInterval","api","deselectAll","clearInterval","exportToCSV","exportDataAsCsv","fileName","state","columnDefs","createColDefs","createRowData","onGridReady","bind","assertThisInitialized","columnApi","selectAllFiltered","getSelectedRows","forEach","row","floor","padding","Button","variant","styles","actionButton","onClick","height","main","gridOptions","suppressRowClickSelection","rowSelection","enableColResize","enableSorting","enableFilter","groupHeaders","rowHeight","Dashboard","components_DataTable_DataTable","App","containers_Dashboard_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ag-cell","div-percent-bar","div-percent-value","div-outer-div"],"mappings":"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","file":"static/js/main.aa03ad4c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Warapper\":\"Dashboard_Warapper__3iTIW\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.myjson.com/bins'\r\n});\r\n\r\nexport default instance;","// this class generates same data to use inside the grid\r\nexport default class SampleRowDataFactory {\r\n\r\n  createRowData() {\r\n      const rowData = [];\r\n\r\n      for (let i = 0; i < 200; i++) {\r\n          const countryData = RefData.COUNTRIES[i % RefData.COUNTRIES.length];\r\n          rowData.push({\r\n              name: RefData.FIRST_NAMES[i % RefData.FIRST_NAMES.length] + ' ' + RefData.LAST_NAMES[i % RefData.LAST_NAMES.length],\r\n              skills: {\r\n                  android: Math.random() < 0.4,\r\n                  html5: Math.random() < 0.4,\r\n                  mac: Math.random() < 0.4,\r\n                  windows: Math.random() < 0.4,\r\n                  css: Math.random() < 0.4\r\n              },\r\n              dob: RefData.DOB[i % RefData.DOB.length],\r\n              address: RefData.ADDRESSES[i % RefData.ADDRESSES.length],\r\n              years: Math.round(Math.random() * 100),\r\n              proficiency: Math.round(Math.random() * 100),\r\n              country: countryData.country,\r\n              continent: countryData.continent,\r\n              language: countryData.language,\r\n              mobile: this.createRandomPhoneNumber(),\r\n              landline: this.createRandomPhoneNumber()\r\n          });\r\n      }\r\n\r\n      return rowData;\r\n  }\r\n\r\n  createRandomPhoneNumber() {\r\n      let result = '+';\r\n      for (let i = 0; i < 12; i++) {\r\n          result += Math.round(Math.random() * 10);\r\n          if (i === 2 || i === 5 || i === 8) {\r\n              result += ' ';\r\n          }\r\n      }\r\n      return result;\r\n  }\r\n}\r\n\r\n\r\nclass RefData {}\r\n\r\nRefData.FIRST_NAMES = [\r\n  \"Sophie\", \"Isabelle\", \"Emily\", \"Olivia\", \"Lily\", \"Chloe\", \"Isabella\",\r\n  \"Amelia\", \"Jessica\", \"Sophia\", \"Ava\", \"Charlotte\", \"Mia\", \"Lucy\", \"Grace\", \"Ruby\",\r\n  \"Ella\", \"Evie\", \"Freya\", \"Isla\", \"Poppy\", \"Daisy\", \"Layla\"\r\n];\r\n\r\nRefData.LAST_NAMES = [\r\n  \"Beckham\", \"Black\", \"Braxton\", \"Brennan\", \"Brock\", \"Bryson\", \"Cadwell\",\r\n  \"Cage\", \"Carson\", \"Chandler\", \"Cohen\", \"Cole\", \"Corbin\", \"Dallas\", \"Dalton\", \"Dane\",\r\n  \"Donovan\", \"Easton\", \"Fisher\", \"Fletcher\", \"Grady\", \"Greyson\", \"Griffin\", \"Gunner\",\r\n  \"Hayden\", \"Hudson\", \"Hunter\", \"Jacoby\", \"Jagger\", \"Jaxon\", \"Jett\", \"Kade\", \"Kane\",\r\n  \"Keating\", \"Keegan\", \"Kingston\", \"Kobe\"\r\n];\r\n\r\nRefData.COUNTRY_CODES = {\r\n  Ireland: \"ie\",\r\n  Spain: \"es\",\r\n  \"United Kingdom\": \"gb\",\r\n  France: \"fr\",\r\n  Germany: \"de\",\r\n  Sweden: \"se\",\r\n  Italy: \"it\",\r\n  Greece: \"gr\",\r\n  Iceland: \"is\",\r\n  Portugal: \"pt\",\r\n  Malta: \"mt\",\r\n  Norway: \"no\",\r\n  Brazil: \"br\",\r\n  Argentina: \"ar\",\r\n  Colombia: \"co\",\r\n  Peru: \"pe\",\r\n  Venezuela: \"ve\",\r\n  Uruguay: \"uy\"\r\n};\r\n\r\nRefData.COUNTRIES = [\r\n  {country: \"India\", continent: \"Asia\", language: \"English\"},\r\n  {country: \"Ireland\", continent: \"Europe\", language: \"English\"},\r\n  {country: \"Spain\", continent: \"Europe\", language: \"Spanish\"},\r\n  {country: \"United Kingdom\", continent: \"Europe\", language: \"English\"},\r\n  {country: \"France\", continent: \"Europe\", language: \"French\"},\r\n  {country: \"Germany\", continent: \"Europe\", language: \"(other)\"},\r\n  {country: \"Sweden\", continent: \"Europe\", language: \"(other)\"},\r\n  {country: \"Norway\", continent: \"Europe\", language: \"(other)\"},\r\n  {country: \"Italy\", continent: \"Europe\", language: \"(other)\"},\r\n  {country: \"Greece\", continent: \"Europe\", language: \"(other)\"},\r\n  {country: \"Iceland\", continent: \"Europe\", language: \"(other)\"},\r\n  {country: \"Portugal\", continent: \"Europe\", language: \"Portuguese\"},\r\n  {country: \"Malta\", continent: \"Europe\", language: \"(other)\"},\r\n  {country: \"Brazil\", continent: \"South America\", language: \"Portuguese\"},\r\n  {country: \"Argentina\", continent: \"South America\", language: \"Spanish\"},\r\n  {country: \"Colombia\", continent: \"South America\", language: \"Spanish\"},\r\n  {country: \"Peru\", continent: \"South America\", language: \"Spanish\"},\r\n  {country: \"Venezuela\", continent: \"South America\", language: \"Spanish\"},\r\n  {country: \"Uruguay\", continent: \"South America\", language: \"Spanish\"}\r\n];\r\n\r\nRefData.DOB = [\r\n  new Date(2000, 0, 1 ),\r\n  new Date(2001, 1, 2 ),\r\n  new Date(2002, 2, 3 ),\r\n  new Date(2003, 3, 4 ),\r\n  new Date(2004, 4, 5 ),\r\n  new Date(2005, 5, 6 ),\r\n  new Date(2006, 6, 7 ),\r\n  new Date(2007, 7, 8 ),\r\n  new Date(2008, 8, 9 ),\r\n  new Date(2009, 9, 10 ),\r\n  new Date(2010, 10, 11 ),\r\n  new Date(2011, 11, 12 )\r\n];\r\n\r\nRefData.ADDRESSES = [\r\n  '1197 Thunder Wagon Common, Cataract, RI, 02987-1016, US, (401) 747-0763',\r\n  '3685 Rocky Glade, Showtucket, NU, X1E-9I0, CA, (867) 371-4215',\r\n  '3235 High Forest, Glen Campbell, MS, 39035-6845, US, (601) 638-8186',\r\n  '2234 Sleepy Pony Mall , Drain, DC, 20078-4243, US, (202) 948-3634',\r\n  '2722 Hazy Turnabout, Burnt Cabins, NY, 14120-5642, US, (917) 604-6597',\r\n  '6686 Lazy Ledge, Two Rock, CA, 92639-3020, US, (619) 901-9911',\r\n  '2000 Dewy Limits, Wacahoota, NF, A4L-2V9, CA, (709) 065-3959',\r\n  '7710 Noble Pond Avenue, Bolivia, RI, 02931-1842, US, (401) 865-2160',\r\n  '3452 Sunny Vale, Pyro, ON, M8V-4Z0, CA, (519) 072-8609',\r\n  '4402 Dusty Cove, Many Farms, UT, 84853-8223, US, (435) 518-0673',\r\n  '5198 Silent Parade, Round Bottom, MD, 21542-9798, US, (301) 060-7245',\r\n  '8550 Shady Moor, Kitty Fork, CO, 80941-6207, US, (303) 502-3767',\r\n  '2131 Old Dell, Merry Midnight, AK, 99906-8842, US, (907) 369-2206',\r\n  '7390 Harvest Crest, Mosquito Crossing, RI, 02957-6116, US, (401) 463-6348',\r\n  '874 Little Point, Hot Coffee, BC, V3U-2P6, CA, (250) 706-9207',\r\n  '8834 Stony Pioneer Heights, Newlove, OR, 97419-8670, US, (541) 408-2213',\r\n  '9829 Grand Beach, Flint, UT, 84965-9900, US, (435) 700-5161',\r\n  '3799 Cozy Blossom Ramp, Ptarmigan, MS, 38715-0313, US, (769) 740-1526',\r\n  '3254 Silver Island Loop, Maunaloa, DE, 19869-3169, US, (302) 667-7671',\r\n  '1081 Middle Wood, Taylors Gut Landing, OR, 97266-2873, US, (541) 357-6310',\r\n  '1137 Umber Trail, Shacktown, NW, X3U-5Y8, CA, (867) 702-6883',\r\n  '9914 Hidden Bank, Wyoming, MO, 64635-9665, US, (636) 280-4192',\r\n  '7080 Misty Nectar Townline, Coward, AB, T9U-3N4, CA, (403) 623-2838',\r\n  '1184 Wishing Grounds, Vibank, NW, X7D-0V9, CA, (867) 531-2730',\r\n  '126 Easy Pointe, Grandview Beach, KY, 40928-9539, US, (502) 548-0956',\r\n  '6683 Colonial Street, Swan River, BC, V1A-9I8, CA, (778) 014-4257',\r\n  '960 Gentle Oak Lane, Shakopee, ND, 58618-6277, US, (701) 327-1219',\r\n  '6918 Cotton Pine Corner, Kenaston, IA, 52165-3975, US, (515) 906-7427',\r\n  '2368 Burning Woods, Ernfold, NY, 11879-9186, US, (646) 819-0355',\r\n  '5646 Quiet Shadow Chase, Tiger Tail, IA, 52283-5537, US, (712) 375-9225',\r\n  '5466 Foggy Mountain Dale, Sweet Home, MT, 59738-0251, US, (406) 881-1706',\r\n  '5313 Clear Willow Route, Amazon, BC, V0S-2S6, CA, (604) 340-7596',\r\n  '7000 Pleasant Autoroute, Spaceport City, UT, 84749-2448, US, (435) 154-3360',\r\n  '8359 Quaking Anchor Road, Gross, BC, V9O-0H5, CA, (250) 985-3859',\r\n  '5143 Amber Deer Hollow, New Deal, ND, 58446-0853, US, (701) 927-0322',\r\n  '6230 Jagged Bear Key, Young, AR, 72337-3811, US, (501) 805-7239',\r\n  '7207 Heather Vista, Devon, WY, 82520-1771, US, (307) 358-7092',\r\n  '9416 Red Rise Place, Spraytown, OK, 73809-4766, US, (580) 867-1973',\r\n  '3770 Golden Horse Diversion, Yelland, IL, 60471-1487, US, (224) 717-9349',\r\n  '4819 Honey Treasure Park, Alaska, NB, E1U-3I0, CA, (506) 656-9138',\r\n  '6187 Round Front, Land O Lakes, AK, 99873-6403, US, (907) 853-9063',\r\n  '9218 Crystal Highway, Pickelville, MT, 59847-9299, US, (406) 076-0024',\r\n  '6737 Bright Quay, Lazy Mountain, KY, 42390-4772, US, (606) 256-7288',\r\n  '237 Merry Campus, Twentysix, SC, 29330-4909, US, (864) 945-0157',\r\n  '446 Fallen Gate Rise, Petrolia, SC, 29959-9527, US, (864) 826-0553',\r\n  '2347 Indian Boulevard, Frisbee, VA, 23797-6458, US, (703) 656-8445',\r\n  '365 Emerald Grove Line, Level, NC, 28381-1514, US, (919) 976-7958',\r\n  '1207 Iron Extension, Klickitat, SC, 29197-8571, US, (803) 535-7888',\r\n  '6770 Cinder Glen, Caronport, OH, 45053-5002, US, (440) 369-4018',\r\n  '7619 Tawny Carrefour, Senlac, NV, 89529-9876, US, (775) 901-6433'];\r\n\r\nRefData.IT_SKILLS = ['android', 'css', 'html5', 'mac', 'windows'];\r\n\r\nRefData.IT_SKILLS_NAMES = ['Android', 'CSS', 'HTML 5', 'Mac', 'Windows'];\r\n","import React from 'react';\r\n\r\n// custom cell for the proficiency column\r\nexport default class ProficiencyCustomCell extends React.Component {\r\n\r\n    render() {\r\n        let backgroundColor;\r\n        if (this.props.value < 20) {\r\n            backgroundColor = 'red';\r\n        } else if (this.props.value < 60) {\r\n            backgroundColor = '#ff9900';\r\n        } else {\r\n            backgroundColor = '#00A000';\r\n        }\r\n\r\n        return (\r\n            <div className=\"div-percent-bar\" style={{width: this.props.value + '%', backgroundColor: backgroundColor}}>\r\n                <div className=\"div-percent-value\">{this.props.value}%</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import ProficiencyCustomCell from './ProficiencyCustomCell';\r\n\r\n// ag-Grid builds columns based on the column definitions returned here\r\nexport default class ColumnDefinitionFactory {\r\n\r\n    createColDefs() {\r\n        return [\r\n            // first column has the checkboxes\r\n            { headerName: '#', width: 30, checkboxSelection: true,\r\n                suppressSorting: true, suppressMenu: true, pinned: true },\r\n\r\n            // the first three columns are grouped in a group called 'Employee'\r\n            { headerName: 'Employee',\r\n                children: [\r\n                    { field: \"name\", width: 150, pinned: true, editable: true},\r\n                    { field: \"country\", width: 150, pinned: true, editable: true,\r\n                        // an example of using a non-React cell renderer\r\n                        cellRenderer: countryCellRenderer,\r\n                        cellEditorParams: {\r\n                            values: [\"Argentina\", \"Brazil\", \"Colombia\", \"France\", \"Germany\", \"Greece\", \"Iceland\", \"India\", \"Ireland\",\r\n                                \"Italy\", \"Malta\", \"Portugal\", \"Norway\", \"Peru\", \"Spain\", \"Sweden\", \"United Kingdom\",\r\n                                \"Uruguay\", \"Venezuela\", \"Belgium\", \"Luxembourg\"],\r\n                            cellRenderer: countryCellRenderer,\r\n                        },\r\n                        filterParams: { cellRenderer: countryCellRenderer, cellHeight: 20},\r\n                        cellEditor: 'agSelectCellEditor'\r\n                    },\r\n                    { headerName: \"Date of Birth\", field: \"dob\", width: 110, filter: 'date', pinned: true,\r\n                        // simple cell formatter for formatting dates\r\n                        valueFormatter: function (params) {\r\n                            return formatDate(params.value);\r\n                        },\r\n                        // only show column when this group is open\r\n                        columnGroupShow: 'open'\r\n                    }\r\n                ]\r\n            },\r\n\r\n            // the next column is not in a group, just by itself\r\n            { field: \"proficiency\", width: 135,\r\n                // supply a React component for custom cell rendering\r\n                cellRendererFramework: ProficiencyCustomCell\r\n            },\r\n\r\n            // then the last group with three columns\r\n            {\r\n                headerName: 'Contact',\r\n                children: [\r\n                    {field: \"mobile\", width: 150, filter: 'text'},\r\n                    {field: \"landline\", width: 150, filter: 'text'},\r\n                    {field: \"address\", width: 500, filter: 'text'}\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n}\r\n\r\n// this is a simple cell renderer, putting together static html, no\r\n// need to use React for it.\r\nfunction countryCellRenderer(params) {\r\n    const COUNTRY_CODES = {\r\n        Ireland: \"ie\",\r\n        Spain: \"es\",\r\n        \"United Kingdom\": \"gb\",\r\n        France: \"fr\",\r\n        Germany: \"de\",\r\n        Sweden: \"se\",\r\n        India: \"in\",\r\n        Italy: \"it\",\r\n        Greece: \"gr\",\r\n        Iceland: \"is\",\r\n        Portugal: \"pt\",\r\n        Malta: \"mt\",\r\n        Norway: \"no\",\r\n        Brazil: \"br\",\r\n        Argentina: \"ar\",\r\n        Colombia: \"co\",\r\n        Peru: \"pe\",\r\n        Venezuela: \"ve\",\r\n        Uruguay: \"uy\"\r\n    };\r\n\r\n    if (params.value) {\r\n        const flag = \"<img border='0' width='15' height='10' \" +\r\n            \"style='margin-bottom: 2px' src='http://flags.fmcdn.net/data/flags/mini/\"\r\n            + COUNTRY_CODES[params.value] + \".png'>\";\r\n        return flag + \" \" + params.value;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n// utility function to format date\r\nfunction formatDate(value) {\r\n    return pad(value.getDate(), 2) + '/' +\r\n        pad(value.getMonth() + 1, 2) + '/' +\r\n        value.getFullYear();\r\n}\r\n\r\n// utility function used to pad the date formatting.\r\nfunction pad(num, totalStringSize) {\r\n    let asString = num + \"\";\r\n    while (asString.length < totalStringSize) asString = \"0\" + asString;\r\n    return asString;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./DataTable.module.scss\";\r\nimport service from \"../../service\";\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-dark.css';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport SampleRowDataFactory from \"../../shared/SampleRowData\";\r\nimport ColumnDefinitionFactory from \"../../shared/ColumnDefinitions\";\r\n\r\nclass DataTable extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      // set the columns to use inside the grid\r\n      columnDefs: new ColumnDefinitionFactory().createColDefs(),\r\n      // set the row data to use inside the grid\r\n      rowData: new SampleRowDataFactory().createRowData()\r\n    };\r\n\r\n    this.onGridReady = this.onGridReady.bind(this);\r\n    this.refreshCells = this.refreshCells.bind(this);\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.api = params.api;\r\n    this.columnApi = params.columnApi;\r\n  }\r\n\r\n  // Throws warning\r\n  refreshCells() {\r\n    this.api.selectAllFiltered();\r\n\r\n    this.api.getSelectedRows().forEach(row => row.proficiency = Math.floor(Math.random() * 100) + 1);\r\n\r\n    this.api.refreshCells();\r\n  }\r\n\r\n  startInterval = () => {\r\n    this.interval = setInterval(() => {\r\n      this.refreshCells();\r\n    }, 1000);\r\n  }\r\n\r\n  stopInterval = () => {\r\n    this.api.deselectAll();\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  exportToCSV = () => {\r\n    this.api.exportDataAsCsv({fileName: \"data\"});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ padding: \"10px\" }}>\r\n          <Button variant=\"success\" className={styles.actionButton} onClick={this.startInterval}>Start Live Data</Button>\r\n          <Button variant=\"danger\" className={styles.actionButton} onClick={this.stopInterval}>Stop Live Data</Button>\r\n          <Button variant=\"info\" className={styles.actionButton}  onClick={this.exportToCSV}>Export Data</Button>\r\n        </div>\r\n        <div style={{ height: 525, width: 1200 }} className=\"ag-theme-dark\">\r\n          <AgGridReact\r\n            // gridOptions is optional - it's possible to provide\r\n            // all values as React props\r\n            gridOptions={this.gridOptions}\r\n\r\n            // listening for events\r\n            onGridReady={this.onGridReady}\r\n\r\n            // binding to array properties\r\n            columnDefs={this.state.columnDefs}\r\n            rowData={this.state.rowData}\r\n\r\n            // no binding, just providing hard coded strings for the properties\r\n            suppressRowClickSelection=\"true\"\r\n            rowSelection=\"multiple\"\r\n            enableColResize=\"true\"\r\n            enableSorting=\"true\"\r\n            enableFilter=\"true\"\r\n            groupHeaders=\"true\"\r\n            rowHeight=\"22\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./Dashboard.module.scss\";\r\n\r\nimport DataTable from \"../../components/DataTable/DataTable\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.Warapper}>\r\n        <DataTable />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport Dashboard from \"./containers/Dashboard/Dashboard\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Dashboard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ag-cell\":\"DataTable_ag-cell__12HNd\",\"div-percent-bar\":\"DataTable_div-percent-bar__2eWOf\",\"div-percent-value\":\"DataTable_div-percent-value__35o8V\",\"div-outer-div\":\"DataTable_div-outer-div__ivbgr\",\"actionButton\":\"DataTable_actionButton__31QSv\"};"],"sourceRoot":""}